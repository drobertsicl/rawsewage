// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_process_batch
List rcpp_process_batch(RawVector raw_data, NumericVector adds, IntegerVector indices, double batch_start, Nullable<NumericVector> calib_coefs, bool use_integer_intensity, bool use_float_mz);
RcppExport SEXP _rawsewage_rcpp_process_batch(SEXP raw_dataSEXP, SEXP addsSEXP, SEXP indicesSEXP, SEXP batch_startSEXP, SEXP calib_coefsSEXP, SEXP use_integer_intensitySEXP, SEXP use_float_mzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type raw_data(raw_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type adds(addsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< double >::type batch_start(batch_startSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type calib_coefs(calib_coefsSEXP);
    Rcpp::traits::input_parameter< bool >::type use_integer_intensity(use_integer_intensitySEXP);
    Rcpp::traits::input_parameter< bool >::type use_float_mz(use_float_mzSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_process_batch(raw_data, adds, indices, batch_start, calib_coefs, use_integer_intensity, use_float_mz));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rawsewage_rcpp_process_batch", (DL_FUNC) &_rawsewage_rcpp_process_batch, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_rawsewage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
